'use strict';

//ООП наука о том как правильно делать архитектуру. В JavaScript все строится на прототипах, его можно назвать прототипно ориентированнным языком.
//Создадим большой прототип всех солдат, который описывает какие-то общие св-ва
const soldier = {
    health: 400,
    armor: 200,
    sayHello: function () {
        console.log('Hello');
    }
};

//создадим новый объект конкретно рядового солдата
const john = Object.create(soldier); //создаем новый объект john, который будет прототипно наследоваться от солдата. Для того чтобы Джон имел доступ к функциям, каким-то методам, каким-то св-вам.

//современный способ создания объекта прототипа
Object.setPrototypeOf(john, soldier) //первым аргументом идет объект, которому нужно задать прототип. вторым объектом тот объект прототип которого устанавливается
john.sayHello();


//устаревший способ, который не нужно использовать
// john.__proto__ = soldier;

// john.sayHello();
// console.log(john)
// console.log(john.armor);
